<%
    /**
     * Copyright ( C ) 2012 eXo Platform SAS.
     *
     * This is free software; you can redistribute it and/or modify it
     * under the terms of the GNU Lesser General Public License as
     * published by the Free Software Foundation; either version 2.1 of
     * the License, or (at your option) any later version.
     *
     * This software is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     * Lesser General Public License for more details.
     *
     * You should have received a copy of the GNU Lesser General Public
     * License along with this software; if not, write to the Free
     * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
     * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
     */
%>
<%
    import org.exoplatform.portal.mop.user.UserNavigation;
    import org.exoplatform.portal.mop.user.UserNode;
    import org.exoplatform.portal.webui.util.Util;
    import org.exoplatform.portal.mop.Visibility;
    import org.exoplatform.webui.organization.OrganizationUtils;
    import org.gatein.common.text.EntityEncoder;
    import org.exoplatform.platform.webui.NavigationURLUtils;
    import org.exoplatform.web.application.JavascriptManager;

    JavascriptManager jsManager = Util.getPortalRequestContext().getJavascriptManager();
    jsManager.addJavascript("initGroupNavigationPortlet('$uicomponent.id')");

    void renderGroupPageNavigation(UserNavigation navigation) {

        def nodes = uicomponent.getValidUserNodes(navigation);
        if (nodes == null || nodes.isEmpty()) return;

        def ownerId = navigation.getKey().getName();
        String navTitle = OrganizationUtils.getGroupLabel(ownerId);
        println """
                      <h5 class="title">
                         $navTitle
                      </h5>
					  <ul class="groupNavigation">
				""";
        for (UserNode node : nodes) {
            renderPageNodeGroup(node);
        }
        println """
				      </ul>
				   
				""";
    }

    void renderPageNodeGroup(UserNode node) {

        if (!node.getVisibility().equals(Visibility.DISPLAYED)) {
            return;
        }

        def childrenNodes = uicomponent.getValidChildren(node);
        def hasChild = (childrenNodes != null) && !childrenNodes.isEmpty();
        String href = NavigationURLUtils.getURL(node);
        boolean toolong = (node.resolvedLabel.length() > 16);
        String label = (toolong ? node.resolvedLabel.substring(0, 15) + "..." : node.resolvedLabel);
        def icon=node.getIcon();
        def cssClazz="nonActive";
        if(uicomponent.isSelectedNavigation(node.getName()))  {
            cssClazz= "active" ;
        }
        if(icon == null) icon = "DefaultPageIcon";
        EntityEncoder entityEncoder = EntityEncoder.FULL;
        label = entityEncoder.encode(label);

        if (node.pageRef == null) {
            href = "#"
        }
        if (hasChild) {
            def display="none";
            if ((uicomponent.isUnfoldedNavigation(node))||(uicomponent.isSelectedNavigation(node.getName())))
                display="block";
            println """
				<li class="groupItem">
					<span class="icon arrowIcon"></span>
                    <a class="groupIcon $icon $cssClazz" href="$href">$label</a>
                    <ul class="childrenContainer" style="display: $display">
					""";


            for (UserNode child : childrenNodes) {
                if (!node.getVisibility().equals(Visibility.DISPLAYED)) {
                    continue;
                }

                renderPageNodeGroup(child);
            }

            println """
					</ul>
				</li>
				""";
        }
        else {
            println """
				<li class=" groupItem ClearFix">
					<span class="icon"></span>
					<a class="groupIcon $icon $cssClazz" href="$href">$label</a>
				</li>

				""";
        }
    }
    def groupNavigations = uicomponent.getGroupNavigations();
%>

<div id="$uicomponent.id" class="uiGroupsNavigationPortlet">

    <% if (groupNavigations != null && !groupNavigations.isEmpty()) {
        lastNode = '';

        for (navigation in groupNavigations) {
            renderGroupPageNavigation(navigation);
        }
    }
    %>
</div>


