<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Bookmarks" description="Bookmarks list.">
    <Locale messages="locale/default.xml" />
    <Locale lang="fr" messages="locale/fr.xml" />
    <Locale lang="es_ES" messages="locale/es_ES.xml" />
    <Locale lang="vi" messages="locale/vi.xml" />
    <Locale lang="sv_SE" messages="locale/sv_SE.xml"/>
    <Locale lang="ja" messages="locale/ja.xml"/>
    <Locale lang="ar" messages="locale/ar.xml"/>
    <Locale lang="de" messages="locale/de.xml"/>
    <Locale lang="pt_BR" messages="locale/pt_BR.xml"/>
    <Locale lang="it" messages="locale/it.xml"/>
    <Locale lang="ru" messages="locale/ru.xml"/>
    <Locale lang="tr" messages="locale/tr.xml"/>
    <Locale lang="zh_CN" messages="locale/zh_CN.xml"/>
    <Locale lang="zh_TW" messages="locale/zh_TW.xml"/>    
    <Locale lang="lt" messages="locale/lt.xml"/>
    <Locale lang="cs" messages="locale/cs.xml"/>
    <Locale lang="uk" messages="locale/uk.xml"/>
    <Locale lang="no" messages="locale/no.xml"/>
    <Locale lang="el" messages="locale/el.xml"/>
    <Locale lang="pl" messages="locale/pl.xml"/>
    <Locale lang="fa" messages="locale/fa.xml"/>
    <Locale lang="ro" messages="locale/ro.xml"/>
    <Locale lang="ca" messages="locale/ca.xml"/>
    <Locale lang="fi" messages="locale/fi.xml"/>
    <Locale lang="nl" messages="locale/nl.xml"/>
    <Locale lang="sl" messages="locale/sl.xml"/>
    <Require feature="dynamic-height"/>
  </ModulePrefs>
  
  <Content type="html">
  <![CDATA[     
    
  <head>
    <link type="text/css" rel="stylesheet" href="/eXoSkin/skin/css/Core.css" />    
    <link type="text/css" rel="stylesheet" href="/eXoSkin/skin/css/platform/samples/gadgets-sample/exo-gadget-resources/gadget-common.css" />
    <link type="text/css" rel="stylesheet" href="/eXoSkin/skin/css/platform/samples/gadgets-sample/gadgets/Bookmark.css" />

    <script language="javascript" type="text/javascript" src="/eXoResources/javascript/jquery-1.7.1.js"></script>
    <script language="javascript" type="text/javascript" src="/eXoResources/skin/bootstrap/js/bootstrap-tooltip.js"></script>
  
    <script type="text/javascript">
    $(function() {

      var emptyMsg = $("#emptyMsg");      
                          
      function addBookmark(id, name, link) {
        var element = $('<li class="ListItem"> \
                      <div class="editHoverZone pull-right">  \
                      <a class="linkeditHoverZone pull-right" rel="tooltip" data-placement="bottom" title data-original-title="__MSG_delete__" href="#" ><i class="uiIconDelete uiIconLightGray"></i></a> \
                      <a class="linkeditHoverZone pull-right" rel="tooltip" data-placement="bottom" title data-original-title="__MSG_edit__" href="#" ><i class="uiIconEdit uiIconLightGray"></i></a>  \
                      </div> \
                      <a id="bookmark'
            + id
            + '" class="bookmarkTit" href="'
            + link
            + '" target="_parent">'
            + name
            + '</a> \
                      <div class="editZone clearfix" style="display:none;">  \
                        <div class="uiGrayLightBox pull-left" >     \
                               <div class="alert-error"></div> \
                               <input type="text" class ="editName" value="'
            + name
            + '"/>    \
                               <input type="text" class ="editLink" value="'
            + link
            + '"/> \
                          </div> \
                       <button type="button" class="btn btn-primary pull-left save">__MSG_ok__</button> \
                       <button type="button" class="btn pull-left cancel">__MSG_cancel__</button> \
                       </div> \
                       </li> ');
        $("#BookmarkList").append($(element));
      }
      
      $.getJSON("/rest/bookmarks/get", function(bookmarks) {
        $.each(bookmarks, function(i, bookmark) {
          var link2 = bookmark.link.replace(/__SLASH__/g, "/").replace(
              "/$PORTAL", parent.parent.eXo.env.portal.context).replace(
              "$SITENAME", parent.parent.eXo.env.portal.portalName);
          addBookmark(i, bookmark.name.replace(/__SLASH__/g, "/"), link2);
        });
        
        changeToViewMode();
        gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
      });
      
      var preventDefault = function(e) {
        e.preventDefault()
      };

      $("#BookmarkList").delegate(
          ".save",
          "click",
          function() {
            var newName = $(this).closest(".ListItem").find(
                "input:text[class=editName]").val();
            var newLink = $(this).closest(".ListItem").find(
                "input:text[class=editLink]").val();
            if (newName.length == 0 || newLink.length == 0)
              return false;
            var thisItem = $(this).closest(".ListItem");
            var $thisBookmark = $(thisItem).find("a[id^=bookmark]");
            var exceptionMsg = $(".alert-error",thisItem);
            $.getJSON("/rest/bookmarks/set/"
                        + toJson().replace(/\//g, "__SLASH__"),
                      function(res){        
                        $(thisItem).find("div.editZone").hide();
                        $thisBookmark.text(newName);
                        $thisBookmark.attr("href", newLink);                
                        $(thisItem).removeClass("active");
                        $(thisItem).removeClass("addBookmark");
                        $("button.save",thisItem).html("__MSG_ok__");
                        exceptionMsg.html("");                                              
                        changeToViewMode();            
                      }
                     ).fail(function( jqXHR, textStatus, error ) {          
                          var err = exceptionHandling(jqXHR, textStatus, error);                          
                          exceptionMsg.html("<i class=\"uiIconError\"></i> "+err+"</div>");                          
                          gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
                        }
                       );            
          });

      $("#BookmarkList").delegate(".cancel", "click", function() {
        //remove all item of new bookmark
        var item = $(this).closest('.ListItem')
        if (item.hasClass("addBookmark")){
            item.remove();
        }        
        else{ //reset old value in case of editing     
            var bookmark = $("a[id^=bookmark]",item);    
            $('.editName',item).val(bookmark.text());
            $('.editLink',item).val(bookmark.attr("href"));
            $(".alert-error",item).html("");
            $("div.editZone",item).hide();
        }
        //.find("div.editZone").hide();
        //$(this).closest(".ListItem").removeClass("active");
        changeToViewMode();
      });

      // click on edit, go to the edit mode;
      $("#BookmarkList").delegate(".uiIconEdit", "click", function() {
        //hide the icon modify and delete
        $(this).closest(".ListItem").find("div.editZone").show();
      $(this).closest(".ListItem").addClass("active");
        // gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
        changeToEditMode();
      });

      $("#BookmarkList").delegate(
          ".uiIconDelete",
          "click",
          function() {
            $(this).closest('.ListItem').remove();
            $.getJSON("/rest/bookmarks/set/"
                + toJson().replace(/\//g, "__SLASH__"), null);
            if ($("#BookmarkList").find(".ListItem").length == 0) {
              emptyMsg.show();
            }
            gadgets.window.adjustHeight($("#content").get(0).offsetHeight);

          });
      
      function tooltipCustomize(){
         $("#customize").tooltip({
            template: '<div class="tooltip" style="white-space: nowrap;"><div class="tooltip-arrow" ></div><div class="tooltip-inner" style="max-width: none"></div></div>'
          });
        
        //$('#customize').data('tooltip').options.placement = 'left';
      }
      
      function changeToViewMode() {
        var bookmarkList = $("#BookmarkList");
        var listItem = $(".ListItem",bookmarkList);         
        $("a.linkeditHoverZone",bookmarkList).each(function () {           
          $(this).tooltip();                    
        });
        tooltipCustomize();
        $("#customize").bind("click", function() {    
          addNewBookMark();
        });    

        $(".ListItem").removeClass("active");
        $(".editHoverZone").removeAttr("style");
        $("a[id^=bookmark]").unbind("click", preventDefault);
        
        if (listItem.length == 0){
          emptyMsg.show();
        }
        
        gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
     }

      function changeToEditMode() {        
        //$("#BookmarkList").undelegate(".ListItem", "mouseover mouseout");    
        $(".ListItem").addClass("active");
        $(".editHoverZone").attr("style","display:none");
        $("a[id^=bookmark]").bind("click", preventDefault);
        $("#customize").tooltip('destroy');
        $("#customize").unbind();       
        emptyMsg.hide();
        gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
      }

      function toJson() {
        var bookmarks = [];
        $("#BookmarkList .ListItem").each(function(index) {
          item = $(this).find("div.editZone");

          var bookmark = "{";
          bookmark += '"name":"' + $("input.editName",item).val() + '",';
          bookmark += '"link":"' + $("input.editLink",item).val() + '"}';
          bookmarks.push(bookmark);
        });
        
        return "[" + bookmarks.join(",") + "]";
      }

      function addNewBookMark() {
        var element = $('<li class="ListItem addBookmark"> \
                    <div class="editHoverZone pull-right"">  \
                    <a class="linkeditHoverZone pull-right" rel="tooltip" data-placement="bottom" title data-original-title="__MSG_delete__" href="#" ><i class="uiIconDelete uiIconLightGray"></i></a> \
                    <a class="linkeditHoverZone pull-right" rel="tooltip" data-placement="bottom" title data-original-title="__MSG_edit__" href="#" ><i class="uiIconEdit uiIconLightGray"></i></a>  \
                    </div> \
                    <a id="bookmarkXXXX" class="bookmarkTit" href="#" target="_parent"></a> \
                    <div class="editZone clearfix">  \
                      <div class="uiGrayLightBox pull-left" >     \
                             <div class="alert-error"></div> \
                             <input type="text" class ="editName" placeholder="__MSG_title__"/>    \
                             <input type="text" class ="editLink" placeholder="__MSG_url__"/> \
                        </div> \
                     <button type="button" class="btn btn-primary pull-left save">__MSG_add__</button> \
                     <button type="button" class="btn pull-left cancel">__MSG_cancel__</button> \
                     </div> \
                     </li> ');
        $("#BookmarkList").append($(element));                              
        changeToEditMode();
        gadgets.window.adjustHeight($("#content").get(0).offsetHeight);
      }

      function checkIfZeroBookMark() {
        $.getJSON("/rest/bookmarks/get", function(bookmarks) {
          if (bookmarks.length == 0) {
            emptyMsg.show();
          }
        });
      }
      
      function exceptionHandling(jqXHR, textStatus, error ) {
         var err = "";
         if (jqXHR.status === 0) {
             err = 'Not connect.\n Verify Network.';
         } else if (jqXHR.status == 404) {
             err = 'Requested page not found. [404]';
         } else if (jqXHR.status == 500) {
             err = 'Internal Server Error [500].';
         } else if (textStatus === 'parsererror') {
             err = 'Requested JSON parse failed.';
         } else if (textStatus === 'timeout') {
             err = 'Time out error.';
         } else if (textStatus === 'abort') {
             err = 'Ajax request aborted.';
         } else {
           err = 'Uncaught Error: ' + error;
         }
        return err;
      }
                         
      
    });

    </script>
  </head>
     <div id="content" class="UIGadgetThemes bookmark uiBox">
       <h6 class="title left">          
         __MSG_title__
             <a class="actionIcon pull-right" href="#" id="customize" ref="tooltip" data-placement="left" data-original-title="__MSG_addBookmark__">
                 <i class="uiIconPlus uiIconLightGray"></i>
             </a>
       </h6>
       
      <div class="uiContentBox">
        <div id="emptyMsg" style="display:none;">
           __MSG_emptyBookmarkPre__
        </div>
          <ul id="BookmarkList"></ul>
        </div>
      </div>
      
  ]]>
</Content>
</Module>

